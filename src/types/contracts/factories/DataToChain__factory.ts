/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { DataToChain, DataToChainInterface } from "../DataToChain";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "RemarkMsg",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "StoreData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101de806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630e5ac4b214610030575b600080fd5b61004361003e3660046100a1565b610045565b005b336001600160a01b03167fab2ca73539f0569985ee7513e073b66f1ce0ae54b0dc1d936dce980fd05c2f954283604051610080929190610152565b60405180910390a250565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156100b357600080fd5b813567ffffffffffffffff808211156100cb57600080fd5b818401915084601f8301126100df57600080fd5b8135818111156100f1576100f161008b565b604051601f8201601f19908116603f011681019083821181831017156101195761011961008b565b8160405282815287602084870101111561013257600080fd5b826020860160208301376000928101602001929092525095945050505050565b82815260006020604081840152835180604085015260005b818110156101865785810183015185820160600152820161016a565b506000606082860101526060601f19601f83011685010192505050939250505056fea2646970667358221220d89ee584813571f0ef95030ecf0718be35880ffba7fb6d3d7697aabaa2b5e30564736f6c63430008140033";

type DataToChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataToChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataToChain__factory extends ContractFactory {
  constructor(...args: DataToChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DataToChain & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DataToChain__factory {
    return super.connect(runner) as DataToChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataToChainInterface {
    return new Interface(_abi) as DataToChainInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DataToChain {
    return new Contract(address, _abi, runner) as unknown as DataToChain;
  }
}
